#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
ุงุฎุชุจุงุฑ ุฑุจุท ุงูุตูุญุงุช ุงูุฌุฏูุฏุฉ ุจุงูุดุฑูุท ุงูุฌุงูุจู
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def test_imports():
    """ุงุฎุชุจุงุฑ ุงุณุชูุฑุงุฏ ุงูุตูุญุงุช ุงูุฌุฏูุฏุฉ"""
    try:
        # ุงุฎุชุจุงุฑ ุงุณุชูุฑุงุฏ ุงููุงุฑุฏุงุช ุงูุฎุงุฑุฌูุฉ
        from ui.pages.external_income.external_income_page import ExternalIncomePage
        print("โ ุชู ุงุณุชูุฑุงุฏ ุตูุญุฉ ุงููุงุฑุฏุงุช ุงูุฎุงุฑุฌูุฉ ุจูุฌุงุญ")
        
        # ุงุฎุชุจุงุฑ ุงุณุชูุฑุงุฏ ุงููุตุฑููุงุช
        from ui.pages.expenses.expenses_page import ExpensesPage
        print("โ ุชู ุงุณุชูุฑุงุฏ ุตูุญุฉ ุงููุตุฑููุงุช ุจูุฌุงุญ")
        
        # ุงุฎุชุจุงุฑ ุงุณุชูุฑุงุฏ ุงูุญุฒู
        from ui.pages.external_income import ExternalIncomePage as EI
        from ui.pages.expenses import ExpensesPage as E
        print("โ ุชู ุงุณุชูุฑุงุฏ ุงูุญุฒู ุจูุฌุงุญ")
        
        return True
        
    except ImportError as e:
        print(f"โ ุฎุทุฃ ูู ุงูุงุณุชูุฑุงุฏ: {e}")
        return False
    except Exception as e:
        print(f"โ ุฎุทุฃ ุนุงู: {e}")
        return False

def test_main_window_integration():
    """ุงุฎุชุจุงุฑ ุชูุงูู ุงููุงูุฐุฉ ุงูุฑุฆูุณูุฉ"""
    try:
        from app.main_window import MainWindow
        
        # ุงูุชุญูู ูู ูุฌูุฏ ุฏูุงู ุชุญููู ุงูุตูุญุงุช
        if hasattr(MainWindow, 'load_external_income_page'):
            print("โ ุฏุงูุฉ ุชุญููู ุงููุงุฑุฏุงุช ุงูุฎุงุฑุฌูุฉ ููุฌูุฏุฉ")
        else:
            print("โ ุฏุงูุฉ ุชุญููู ุงููุงุฑุฏุงุช ุงูุฎุงุฑุฌูุฉ ุบูุฑ ููุฌูุฏุฉ")
            
        if hasattr(MainWindow, 'load_expenses_page'):
            print("โ ุฏุงูุฉ ุชุญููู ุงููุตุฑููุงุช ููุฌูุฏุฉ")
        else:
            print("โ ุฏุงูุฉ ุชุญููู ุงููุตุฑููุงุช ุบูุฑ ููุฌูุฏุฉ")
            
        return True
        
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุงุฎุชุจุงุฑ ุงููุงูุฐุฉ ุงูุฑุฆูุณูุฉ: {e}")
        return False

def test_database_tables():
    """ุงุฎุชุจุงุฑ ุฅูุดุงุก ุฌุฏุงูู ูุงุนุฏุฉ ุงูุจูุงูุงุช"""
    try:
        from core.database.connection import db_manager
        
        # ุงุฎุชุจุงุฑ ุฅูุดุงุก ุฌุฏูู ุงููุงุฑุฏุงุช ุงูุฎุงุฑุฌูุฉ
        create_income_table = """
            CREATE TABLE IF NOT EXISTS external_income (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                school_id INTEGER NOT NULL,
                title VARCHAR(255) NOT NULL,
                amount DECIMAL(10,2) NOT NULL,
                source VARCHAR(255),
                category VARCHAR(100),
                income_date DATE NOT NULL,
                notes TEXT,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (school_id) REFERENCES schools(id)
            )
        """
        
        # ุงุฎุชุจุงุฑ ุฅูุดุงุก ุฌุฏูู ุงููุตุฑููุงุช
        create_expenses_table = """
            CREATE TABLE IF NOT EXISTS expenses (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                school_id INTEGER NOT NULL,
                title VARCHAR(255) NOT NULL,
                amount DECIMAL(10,2) NOT NULL,
                category VARCHAR(100),
                supplier VARCHAR(255),
                expense_date DATE NOT NULL,
                payment_method VARCHAR(50),
                reference_number VARCHAR(100),
                notes TEXT,
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                FOREIGN KEY (school_id) REFERENCES schools(id)
            )
        """
        
        db_manager.execute_update(create_income_table)
        print("โ ุชู ุฅูุดุงุก ุฌุฏูู ุงููุงุฑุฏุงุช ุงูุฎุงุฑุฌูุฉ")
        
        db_manager.execute_update(create_expenses_table)
        print("โ ุชู ุฅูุดุงุก ุฌุฏูู ุงููุตุฑููุงุช")
        
        return True
        
    except Exception as e:
        print(f"โ ุฎุทุฃ ูู ุฅูุดุงุก ุฌุฏุงูู ูุงุนุฏุฉ ุงูุจูุงูุงุช: {e}")
        return False

if __name__ == "__main__":
    print("๐ ุงุฎุชุจุงุฑ ุฑุจุท ุงูุตูุญุงุช ุงูุฌุฏูุฏุฉ...")
    print("=" * 50)
    
    print("\n1. ุงุฎุชุจุงุฑ ุงูุงุณุชูุฑุงุฏุงุช:")
    test_imports()
    
    print("\n2. ุงุฎุชุจุงุฑ ุชูุงูู ุงููุงูุฐุฉ ุงูุฑุฆูุณูุฉ:")
    test_main_window_integration()
    
    print("\n3. ุงุฎุชุจุงุฑ ุฌุฏุงูู ูุงุนุฏุฉ ุงูุจูุงูุงุช:")
    test_database_tables()
    
    print("\n" + "=" * 50)
    print("โจ ุงูุชูู ุงูุงุฎุชุจุงุฑ!")
    print("\n๐ก ูุชุดุบูู ุงูุชุทุจูู:")
    print("   python main.py")
    print("\n๐ ูููุฒูุฏ ูู ุงููุนูููุงุช:")
    print("   ุฑุงุฌุน ููู NEW_SECTIONS_README.md")
